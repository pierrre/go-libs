[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=5) "<nil>",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=6) "string",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=13) "*bytes.Buffer",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=10) "*testing.T",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=14) "*reflect.rtype",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=12) "interface {}",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=9) "io.Writer",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=10) "testing.TB",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "interface {}",
	typ: [string] (len=12) "reflect.Type",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=5) "<nil>",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=6) "string",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=13) "*bytes.Buffer",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=10) "*testing.T",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=14) "*reflect.rtype",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=12) "interface {}",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=9) "io.Writer",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=10) "testing.TB",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=9) "io.Writer",
	typ: [string] (len=12) "reflect.Type",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=5) "<nil>",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=6) "string",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=13) "*bytes.Buffer",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=10) "*testing.T",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=14) "*reflect.rtype",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=12) "interface {}",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=9) "io.Writer",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=10) "testing.TB",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=10) "testing.TB",
	typ: [string] (len=12) "reflect.Type",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=5) "<nil>",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=6) "string",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=13) "*bytes.Buffer",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=10) "*testing.T",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=14) "*reflect.rtype",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=12) "interface {}",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=9) "io.Writer",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=10) "testing.TB",
	implements: [bool] false,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	itf: [string] (len=12) "reflect.Type",
	typ: [string] (len=12) "reflect.Type",
	implements: [bool] true,
}
	========== assertauto ==========
[github.com/pierrre/assert/assertauto.allocsPerRun] {
	Runs: [int] 100,
	Allocs: [float64] 0,
}