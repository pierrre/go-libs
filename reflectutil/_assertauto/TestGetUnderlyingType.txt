[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=4) "bool",
	underlying: [string] (len=4) "bool",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=3) "int",
	underlying: [string] (len=3) "int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=4) "int8",
	underlying: [string] (len=4) "int8",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=5) "int16",
	underlying: [string] (len=5) "int16",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=5) "int32",
	underlying: [string] (len=5) "int32",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=5) "int64",
	underlying: [string] (len=5) "int64",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=4) "uint",
	underlying: [string] (len=4) "uint",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=5) "uint8",
	underlying: [string] (len=5) "uint8",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=6) "uint16",
	underlying: [string] (len=6) "uint16",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=6) "uint32",
	underlying: [string] (len=6) "uint32",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=6) "uint64",
	underlying: [string] (len=6) "uint64",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=7) "uintptr",
	underlying: [string] (len=7) "uintptr",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=7) "float32",
	underlying: [string] (len=7) "float32",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=7) "float64",
	underlying: [string] (len=7) "float64",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=9) "complex64",
	underlying: [string] (len=9) "complex64",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=10) "complex128",
	underlying: [string] (len=10) "complex128",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=6) "[1]int",
	underlying: [string] (len=6) "[1]int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=8) "chan int",
	underlying: [string] (len=8) "chan int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=13) "func(int) int",
	underlying: [string] (len=13) "func(int) int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=14) "map[string]int",
	underlying: [string] (len=14) "map[string]int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=7) "*string",
	underlying: [string] (len=7) "*string",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=5) "[]int",
	underlying: [string] (len=5) "[]int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=6) "string",
	underlying: [string] (len=6) "string",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=14) "unsafe.Pointer",
	underlying: [string] (len=14) "unsafe.Pointer",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=10) "testing.TB",
	underlying: [string] (len=10) "testing.TB",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=24) "struct { String string }",
	underlying: [string] (len=24) "struct { String string }",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=56) "github.com/pierrre/go-libs/reflectutil_test.CustomString",
	underlying: [string] (len=6) "string",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=55) "github.com/pierrre/go-libs/reflectutil_test.CustomArray",
	underlying: [string] (len=6) "[1]int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=54) "github.com/pierrre/go-libs/reflectutil_test.CustomChan",
	underlying: [string] (len=8) "chan int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=54) "github.com/pierrre/go-libs/reflectutil_test.CustomFunc",
	underlying: [string] (len=13) "func(int) int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=53) "github.com/pierrre/go-libs/reflectutil_test.CustomMap",
	underlying: [string] (len=14) "map[string]int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=57) "github.com/pierrre/go-libs/reflectutil_test.CustomPointer",
	underlying: [string] (len=7) "*string",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=55) "github.com/pierrre/go-libs/reflectutil_test.CustomSlice",
	underlying: [string] (len=5) "[]int",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=56) "github.com/pierrre/go-libs/reflectutil_test.CustomString",
	underlying: [string] (len=6) "string",
}
	========== assertauto ==========
[github.com/pierrre/go-libs/reflectutil_test.result] {
	typ: [string] (len=56) "github.com/pierrre/go-libs/reflectutil_test.CustomStruct",
	underlying: [string] (len=56) "github.com/pierrre/go-libs/reflectutil_test.CustomStruct",
}